#!/bin/bash

echo "üß™ Testing MPC Flow in iOS App"
echo "================================"
echo ""
echo "1. Build and run the app with the following changes:"
echo "   - Fixed ProfileViewModel to use MPCWalletServiceHTTP.isEnabled"
echo "   - Added MPCDebugHelper to enable MPC in debug builds"
echo "   - Added logging throughout the MPC generation flow"
echo ""
echo "2. To test MPC generation:"
echo "   a) Run the app in Xcode"
echo "   b) Create a new profile with any name"
echo "   c) Watch the console for these log messages:"
echo ""
echo "Expected logs in order:"
echo "   üì± AppDelegate: Enabling MPC wallet for debug testing"
echo "   ‚úÖ MPC Wallet enabled in UserDefaults"
echo "   üåê ProfileAPI: Creating profile with request: {...}"
echo "   ‚úÖ MPC wallet generation enabled for profile: [profile-id]"
echo "   üîµ MPCWalletServiceHTTP.generateWallet called for profile: [profile-id]"
echo "   üîµ Step 1: Requesting biometric authentication..."
echo "   üîµ Step 2: Getting cloud public key from backend..."
echo "   üåê ProfileAPI+MPC: Calling POST /api/v2/mpc/generate"
echo ""
echo "3. If you see '‚ùå MPC wallet generation skipped', check:"
echo "   - developmentMode should be false"
echo "   - MPCWalletServiceHTTP.isEnabled should be true"
echo ""
echo "4. Common issues:"
echo "   - Backend not running: Start with 'npm run dev'"
echo "   - Missing DUO_NODE_URL in backend .env file"
echo "   - Authentication token issues"
echo ""
echo "5. To manually enable MPC in a running app:"
echo "   - Add a button that calls: MPCDebugHelper.enableMPCWallet()"
echo "   - Or set breakpoint and run: UserDefaults.standard.set(true, forKey: \"mpcWalletEnabled\")"